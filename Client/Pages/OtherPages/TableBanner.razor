<div class="container">
    <div class="row">
        <div class="col-lg-2 cursorStyle">
            <div class="card border-primary">
                <div class="card-header"><i class="bi bi-people text-primary mx-1"></i>Employees
                    <span class="badge bg-primary fs-6 float-end">@Employees.Count</span>
                </div>
            </div>
        </div>
         <div class="col-lg-2 cursorStyle">
            <div class="card border-success" @onclick="VacationClicked">
                <div class="card-header"><i class="bi bi-backpack3 text-success mx-1"></i>Vacation
                    <span class="badge bg-success fs-6 float-end">@Vacations.Count</span>
                </div>
            </div>
        </div>
        <div class="col-lg-2 cursorStyle">
            <div class="card border-danger" @onclick="OvertimeClicked">
                <div class="card-header"><i class="bi bi-stopwatch text-danger mx-1"></i>Overtime
                    <span class="badge bg-danger fs-6 float-end">@Overtimes.Count</span>
                </div>
            </div>
        </div>
        <div class="col-lg-2 cursorStyle">
            <div class="card border-warning" @onclick="HealthClicked">
                <div class="card-header"><i class="bi bi-hospital text-warning mx-1"></i>Health
                    <span class="badge bg-dark fs-6 float-end">@Health.Count</span>
                </div>
            </div>
        </div>
        <div class="col-lg-2 cursorStyle">
            <div class="card border-info" @onclick="SactionClicked">
                <div class="card-header"><i class="bi bi-x-octagon text-info mx-1"></i>Sanctions
                    <span class="badge bg-warning fs-6 float-end">@Sactions.Count</span>
                </div>
            </div>
        </div>
        <div class="col-lg-2 cursorStyle">
            <div class="card border-dark">
                <div class="card-header"><i class="bi bi-slack text-dark mx-1"></i>Departments
                    <span class="badge bg-dark fs-6 float-end">@Departments.Count</span>
                </div>
            </div>
        </div>
    </div>
</div>

@code{
    public List<Employee> Employees { get; set; } = new();
    public List<Department> Departments { get; set; } = new();
    public List<Overtime> Overtimes { get; set; } = new();
    public List<Saction> Sactions { get; set; } = new();
    public List<Vacation> Vacations { get; set; } = new();
    public List<Doctor> Health { get; set; } = new();

    protected async override Task OnInitializedAsync()
    {
        allState.Action += StateHasChanged;
        await LoadDefaults();
    }

    async Task LoadDefaults()
    {
        Employees = await employeeService.GetAll(Constants.EmployeeBaseUrl);
        Departments = await departmentService.GetAll(Constants.DepartmentBaseUrl);
        Overtimes = await overtimeService.GetAll(Constants.OvertimeBaseUrl);
        Sactions = await sactionService.GetAll(Constants.SactionBaseUrl);
        Vacations = await vacationService.GetAll(Constants.VacationBaseUrl);
        Health = await doctorService.GetAll(Constants.DoctorBaseUrl);
    }

    void HealthClicked() => allState.HealthClicked();
    void OvertimeClicked() => allState.OvertimeClicked();
    void SactionClicked() => allState.SactionClicked();
    void VacationClicked() => allState.VacationClicked();

    public void Dispose() => allState.Action -= StateHasChanged;
}