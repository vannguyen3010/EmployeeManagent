
<SfDialog Width="280px" IsModal="true" ShowCloseIcon="true" @bind-Visible="IsVisible">
    <DialogEvents OnOpen="OpenDialog"></DialogEvents>
    <DialogTemplates>
        <Header>@Title Employee's Saction'</Header>
        <Content>
            <EditForm Model="ItemModel" Enhance OnSubmit="Save">
                <div class="card border-success">
                    <div class="card-body">
                        <div class="form-group">
                            <label class="form-label">Employee ID</label>
                            <input @bind="ItemModel.EmployeeId" class="form-control" disabled />
                        </div>
                        <div class="form-group mt-2">
                            <label class="form-label">Ocurring Date</label>
                            <InputDate @bind-Value="ItemModel.Date" class="form-control" />
                        </div>
                        <div class="form-group mt-2">
                            <label class="form-label">Punishment Date</label>
                            <InputDate @bind-Value="ItemModel.PunishmentDate" class="form-control" />
                        </div>
                        <div class="form-group mt-2">
                            <label class="form-label">Punishment</label>
                            <InputTextArea @bind-Value="@ItemModel.Punishment" class="form-control" />
                        </div>
                        <div class="form-group mt-3 mb-3">
                            <label class="form-label">Select Type</label>
                            @if (ItemModel.SactionType != null)
                            {
                                string selected = ItemModel.SactionType!.Name!;
                                <SfDropDownList TValue="string" TItem="SactionType" Placeholder="@selected" DataSource="SactionTypes">
                                    <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                                    <DropDownListEvents TValue="string" TItem="SactionType" ValueChange="OnValueChange"></DropDownListEvents>
                                </SfDropDownList>
                            }
                            else
                            {
                                <SfDropDownList TValue="string" TItem="SactionType" Placeholder="Select Type" DataSource="SactionTypes">
                                    <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                                    <DropDownListEvents TValue="string" TItem="SactionType" ValueChange="OnValueChange"></DropDownListEvents>
                                </SfDropDownList>
                            }
                        </div>
                    </div>
                </div>
            </EditForm>
        </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton Content="SAVE" Type="ButtonType.Submit" IsPrimary="true" OnClick="Save" />
    </DialogButtons>
</SfDialog>

@code {
    [Parameter] public Saction ItemModel { get; set; } = new();
    [Parameter] public List<SactionType> SactionTypes { get; set; } = new();
    [Parameter] public EventCallback<Saction> HandleSaveOperationEvent { get; set; }
    public string Title { get; set; } = "Add";
    private bool IsVisible { get; set; } = false;
    private async void Save()
    {
        if (ItemModel.SactionTypeId <= 0)
            await dialogService.AlertAsync("You need to provide type.", "Alert!");
        else
            await HandleSaveOperationEvent.InvokeAsync(ItemModel);
    }
    public void OpenDialog()
    {
        IsVisible = true;
        StateHasChanged();
    }
    public void CloseDialog()
    {
        IsVisible = false;
        StateHasChanged();
    }
    // public void OnValueChange(ChangeEventArgs<string, OvertimeType> args)
    // {
    //     ItemModel.SactionTypeId = int.Parse(args.Value.ToString());
    // }
    public void OnValueChange(ChangeEventArgs<string, SactionType> args) => 
    ItemModel.SactionTypeId = int.Parse(args.Value.ToString());

    public void ChangeTitle(string title) => Title = title;
}
